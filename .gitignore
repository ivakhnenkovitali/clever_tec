
package ru.clevertec.check;
import ru.clevertec.check.model.*;
import ru.clevertec.check.repository.*;
import ru.clevertec.check.service.*;
import ru.clevertec.check.util.*;

import java.util.*;

public class CheckRunner {
    public static void main(String[] args) {
        try {
            if (args.length < 2) throw new IllegalArgumentException("Недостаточно аргументов");

            ArgumentParser parser = new ArgumentParser(args);
            Map<Integer, Integer> products = parser.getProducts();
            String cardNumber = parser.getDiscountCard();
            double balance = parser.getBalance();

            ProductRepository productRepo = new ProductRepository("./src/main/resources/products.csv");
            DiscountCardRepository cardRepo = new DiscountCardRepository("./src/main/resources/discountCards.csv");

            ReceiptService receiptService = new ReceiptService(productRepo, cardRepo);
            Receipt receipt = receiptService.generate(products, cardNumber, balance);

            CsvService.saveReceipt(receipt, "result.csv");
            System.out.println(receipt);

        } catch (Exception e) {
            e.printStackTrace();
            CsvService.saveError("result.csv", e.getMessage());
        }
    }
}

// === model/Product.java ===
package ru.clevertec.check.model;

public class Product {
    private final int id;
    private final String description;
    private final double price;
    private final boolean wholesale;

    public Product(int id, String description, double price, boolean wholesale) {
        this.id = id;
        this.description = description;
        this.price = price;
        this.wholesale = wholesale;
    }

    public int getId() { return id; }
    public String getDescription() { return description; }
    public double getPrice() { return price; }
    public boolean isWholesale() { return wholesale; }
}

// === model/DiscountCard.java ===
package ru.clevertec.check.model;

public class DiscountCard {
    private final String number;
    private final int percent;

    public DiscountCard(String number, int percent) {
        this.number = number;
        this.percent = percent;
    }

    public String getNumber() { return number; }
    public int getPercent() { return percent; }
}

// === model/ReceiptLine.java ===
package ru.clevertec.check.model;

public class ReceiptLine {
    public int qty;
    public String description;
    public double price;
    public double total;
    public double discount;

    public ReceiptLine(int qty, String description, double price, double total, double discount) {
        this.qty = qty;
        this.description = description;
        this.price = price;
        this.total = total;
        this.discount = discount;
    }

    public String toString() {
        return qty + " x " + description + " @ " + price + "$ = " + total + "$ - discount " + discount + "$";
    }
}

// === model/Receipt.java ===
package ru.clevertec.check.model;

import java.util.*;

public class Receipt {
    public List<ReceiptLine> lines = new ArrayList<>();
    public double totalPrice;
    public double totalDiscount;
    public double finalPrice;
    public String discountCard;
    public int discountPercent;

    public void addLine(ReceiptLine line) {
        lines.add(line);
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        for (ReceiptLine line : lines) {
            sb.append(line).append("\n");
        }
        sb.append("Discount card: ").append(discountCard).append(" (" + discountPercent + "%)\n");
        sb.append("Total: ").append(totalPrice).append("$\n");
        sb.append("Discount: ").append(totalDiscount).append("$\n");
        sb.append("Total with discount: ").append(finalPrice).append("$\n");
        return sb.toString();
    }
}

// === repository/ProductRepository.java ===
package ru.clevertec.check.repository;

import ru.clevertec.check.model.Product;

import java.nio.file.*;
import java.util.*;

public class ProductRepository {
    private final Map<Integer, Product> map = new HashMap<>();

    public ProductRepository(String path) throws Exception {
        List<String> lines = Files.readAllLines(Paths.get(path));
        for (String line : lines) {
            String[] p = line.split(";");
            int id = Integer.parseInt(p[0]);
            String desc = p[1];
            double price = Double.parseDouble(p[2].replace(",", "."));
            boolean wholesale = p[4].trim().equals("+");
            map.put(id, new Product(id, desc, price, wholesale));
        }
    }

    public Product getById(int id) {
        return map.get(id);
    }
}

// === repository/DiscountCardRepository.java ===
package ru.clevertec.check.repository;

import ru.clevertec.check.model.DiscountCard;

import java.nio.file.*;
import java.util.*;

public class DiscountCardRepository {
    private final Map<String, DiscountCard> map = new HashMap<>();

    public DiscountCardRepository(String path) throws Exception {
        List<String> lines = Files.readAllLines(Paths.get(path));
        for (String line : lines) {
            String[] p = line.split(";");
            map.put(p[1], new DiscountCard(p[1], Integer.parseInt(p[2])));
        }
    }

    public DiscountCard getByNumber(String number) {
        return map.getOrDefault(number, new DiscountCard(number, 2));
    }
}

// === service/ReceiptService.java ===
package ru.clevertec.check.service;

import ru.clevertec.check.model.*;
import ru.clevertec.check.repository.*;

import java.util.Map;

public class ReceiptService {
    private final ProductRepository productRepo;
    private final DiscountCardRepository cardRepo;

    public ReceiptService(ProductRepository productRepo, DiscountCardRepository cardRepo) {
        this.productRepo = productRepo;
        this.cardRepo = cardRepo;
    }

    public Receipt generate(Map<Integer, Integer> items, String card, double balance) {
        Receipt receipt = new Receipt();
        DiscountCard discountCard = cardRepo.getByNumber(card);

        for (Map.Entry<Integer, Integer> entry : items.entrySet()) {
            Product p = productRepo.getById(entry.getKey());
            int qty = entry.getValue();
            double total = p.getPrice() * qty;
            double discount = 0;

            if (p.isWholesale() && qty >= 5) {
                discount = total * 0.10;
            } else {
                discount = total * discountCard.getPercent() / 100.0;
            }

            receipt.addLine(new ReceiptLine(qty, p.getDescription(), p.getPrice(), total, discount));
            receipt.totalPrice += total;
            receipt.totalDiscount += discount;
        }

        receipt.discountCard = card;
        receipt.discountPercent = discountCard.getPercent();
        receipt.finalPrice = receipt.totalPrice - receipt.totalDiscount;

        if (balance < receipt.finalPrice)
            throw new RuntimeException("NOT ENOUGH MONEY");

        return receipt;
    }
}

// === service/CsvService.java ===
package ru.clevertec.check.service;

import ru.clevertec.check.model.*;

import java.io.*;
import java.time.LocalDateTime;

public class CsvService {
    public static void saveReceipt(Receipt receipt, String path) {
        try (PrintWriter out = new PrintWriter(new File(path))) {
            LocalDateTime now = LocalDateTime.now();
            out.println("Date;Time;QTY;DESCRIPTION;PRICE;TOTAL;DISCOUNT");
            for (ReceiptLine l : receipt.lines) {
                out.printf("%s;%s;%d;%s;%.2f$;%.2f$;%.2f$\n",
                        now.toLocalDate(), now.toLocalTime().withNano(0),
                        l.qty, l.description, l.price, l.total, l.discount);
            }
            out.printf(";;;;;;\nTotal;%.2f$;Discount;%.2f$;Final;%.2f$\n",
                    receipt.totalPrice, receipt.totalDiscount, receipt.finalPrice);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void saveError(String path, String msg) {
        try (PrintWriter out = new PrintWriter(new File(path))) {
            out.println("ERROR");
            out.println(msg);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

// === util/ArgumentParser.java ===
package ru.clevertec.check.util;

import java.util.*;

public class ArgumentParser {
    private final Map<Integer, Integer> products = new HashMap<>();
    private String discountCard = "0000";
    private double balance = 0;

    public ArgumentParser(String[] args) {
        for (String arg : args) {
            if (arg.startsWith("discountCard=")) {
                discountCard = arg.split("=")[1];
            } else if (arg.startsWith("balanceDebitCard=")) {
                balance = Double.parseDouble(arg.split("=")[1]);
            } else if (arg.matches("\\d+-\\d+")) {
                String[] parts = arg.split("-");
                int id = Integer.parseInt(parts[0]);
                int qty = Integer.parseInt(parts[1]);
                products.put(id, products.getOrDefault(id, 0) + qty);
            }
        }
    }

    public Map<Integer, Integer> getProducts() { return products; }
    public String getDiscountCard() { return discountCard; }
    public double getBalance() { return balance; }
}
